# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='common.proto',
  package='heron.proto.system',
  syntax='proto2',
  serialized_pb=_b('\n\x0c\x63ommon.proto\x12\x12heron.proto.system\"I\n\x06Status\x12.\n\x06status\x18\x01 \x02(\x0e\x32\x1e.heron.proto.system.StatusCode\x12\x0f\n\x07message\x18\x02 \x01(\t*\x9d\x03\n\nStatusCode\x12\x06\n\x02OK\x10\x01\x12\t\n\x05NOTOK\x10\x02\x12\x19\n\x15INVALID_TOPOLOGY_NAME\x10\x64\x12\x1b\n\x17TOPOLOGY_ALREADY_ACTIVE\x10\x65\x12\x1d\n\x19TOPOLOGY_ALREADY_DEACTIVE\x10\x66\x12\x17\n\x13NOT_YET_IMPLEMENTED\x10g\x12\x12\n\rINVALID_STMGR\x10\xe8\x07\x12\x19\n\x14STMGR_DIDNT_REGISTER\x10\xe9\x07\x12\x15\n\x10\x44UPLICATE_STRMGR\x10\xea\x07\x12\x18\n\x13PATH_DOES_NOT_EXIST\x10\xd0\x0f\x12\x18\n\x13PATH_ALREADY_EXISTS\x10\xd1\x0f\x12#\n\x1eTMASTERLOCATION_ALREADY_EXISTS\x10\xd2\x0f\x12\x14\n\x0fSTATE_CORRUPTED\x10\xd3\x0f\x12\x15\n\x10STATE_READ_ERROR\x10\xd4\x0f\x12\x16\n\x11STATE_WRITE_ERROR\x10\xd5\x0f\x12(\n#METRICSCACHELOCATION_ALREADY_EXISTS\x10\xd6\x0f\x42(\n\x1e\x63om.twitter.heron.proto.systemB\x06\x43ommon')
)

_STATUSCODE = _descriptor.EnumDescriptor(
  name='StatusCode',
  full_name='heron.proto.system.StatusCode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='OK', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NOTOK', index=1, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INVALID_TOPOLOGY_NAME', index=2, number=100,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TOPOLOGY_ALREADY_ACTIVE', index=3, number=101,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TOPOLOGY_ALREADY_DEACTIVE', index=4, number=102,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NOT_YET_IMPLEMENTED', index=5, number=103,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INVALID_STMGR', index=6, number=1000,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STMGR_DIDNT_REGISTER', index=7, number=1001,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DUPLICATE_STRMGR', index=8, number=1002,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PATH_DOES_NOT_EXIST', index=9, number=2000,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PATH_ALREADY_EXISTS', index=10, number=2001,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TMASTERLOCATION_ALREADY_EXISTS', index=11, number=2002,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STATE_CORRUPTED', index=12, number=2003,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STATE_READ_ERROR', index=13, number=2004,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STATE_WRITE_ERROR', index=14, number=2005,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICSCACHELOCATION_ALREADY_EXISTS', index=15, number=2006,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=112,
  serialized_end=525,
)
_sym_db.RegisterEnumDescriptor(_STATUSCODE)

StatusCode = enum_type_wrapper.EnumTypeWrapper(_STATUSCODE)
OK = 1
NOTOK = 2
INVALID_TOPOLOGY_NAME = 100
TOPOLOGY_ALREADY_ACTIVE = 101
TOPOLOGY_ALREADY_DEACTIVE = 102
NOT_YET_IMPLEMENTED = 103
INVALID_STMGR = 1000
STMGR_DIDNT_REGISTER = 1001
DUPLICATE_STRMGR = 1002
PATH_DOES_NOT_EXIST = 2000
PATH_ALREADY_EXISTS = 2001
TMASTERLOCATION_ALREADY_EXISTS = 2002
STATE_CORRUPTED = 2003
STATE_READ_ERROR = 2004
STATE_WRITE_ERROR = 2005
METRICSCACHELOCATION_ALREADY_EXISTS = 2006



_STATUS = _descriptor.Descriptor(
  name='Status',
  full_name='heron.proto.system.Status',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='heron.proto.system.Status.status', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='message', full_name='heron.proto.system.Status.message', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=36,
  serialized_end=109,
)

_STATUS.fields_by_name['status'].enum_type = _STATUSCODE
DESCRIPTOR.message_types_by_name['Status'] = _STATUS
DESCRIPTOR.enum_types_by_name['StatusCode'] = _STATUSCODE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Status = _reflection.GeneratedProtocolMessageType('Status', (_message.Message,), dict(
  DESCRIPTOR = _STATUS,
  __module__ = 'common_pb2'
  # @@protoc_insertion_point(class_scope:heron.proto.system.Status)
  ))
_sym_db.RegisterMessage(Status)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\036com.twitter.heron.proto.systemB\006Common'))
# @@protoc_insertion_point(module_scope)
